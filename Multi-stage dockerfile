# Stage 1: Build the Java Application with Maven
# Use the latest Ubuntu image as the base for the build environment
FROM ubuntu:latest AS build

# Set environment variables
ENV JAVA_VERSION=21
ENV MAVEN_VERSION=3.9.4
ENV MAVEN_HOME=/usr/local/maven
ENV PATH=$MAVEN_HOME/bin:$PATH

# Install necessary packages and dependencies for building
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    lsb-release \
    git \
    openjdk-21-jdk \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Maven
RUN curl -o /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
    -L https://dlcdn.apache.org/maven/maven-3/${MAVEN_VERSION}/binaries/apache-maven-${MAVEN_VERSION}-bin.tar.gz \
    && tar -xzvf /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz -C /usr/local \
    && mv /usr/local/apache-maven-${MAVEN_VERSION} $MAVEN_HOME \
    && rm /tmp/apache-maven-${MAVEN_VERSION}-bin.tar.gz

# Set the working directory for the build process
WORKDIR /app

# Clone the Git repository
RUN git clone https://github.com/ragjyo/Shellscript-canada.git .

# Change to the Maven project directory
WORKDIR /app/java-sample

# Build the Maven project (clean and install dependencies)
RUN mvn clean install

# Stage 2: Runtime Environment
# Use a smaller image (JRE instead of JDK) for the final runtime environment
FROM openjdk:21-jdk-slim AS runtime

# Copy the built application from the build stage
COPY --from=build /app/java-sample/webapp/target /app/target

# Set the working directory
WORKDIR /app

# Expose the necessary port (e.g., for the application to run on port 8080)
EXPOSE 8080

# Default command to run the application (update based on your actual application)
CMD ["java", "-jar", "target/webapp.jar"]
